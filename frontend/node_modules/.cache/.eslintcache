[{"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\index.js":"1","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\App.js":"2","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\components\\add-task.component.js":"4","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\components\\task.component.js":"5","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\components\\tasks-list.component.js":"6","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\services\\task.service.js":"7","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\http-common.js":"8"},{"size":423,"mtime":1669741698228,"results":"9","hashOfConfig":"10"},{"size":1430,"mtime":1669741698223,"results":"11","hashOfConfig":"10"},{"size":5226,"mtime":1669741698230,"results":"12","hashOfConfig":"10"},{"size":2154,"mtime":1669741698225,"results":"13","hashOfConfig":"10"},{"size":4266,"mtime":1669741698226,"results":"14","hashOfConfig":"10"},{"size":4305,"mtime":1669741698226,"results":"15","hashOfConfig":"10"},{"size":783,"mtime":1669741698231,"results":"16","hashOfConfig":"10"},{"size":191,"mtime":1669741698227,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5ix9ic",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\index.js",[],[],"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\App.js",["44","45"],[],"import React from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\nimport logo from './assets/images/logo-efrei.png';\r\n\r\nimport {AddTask} from \"./components/add-task.component\";\r\nimport {Task} from \"./components/task.component\";\r\nimport {TasksList} from \"./components/tasks-list.component\";\r\n\r\nconst App = () => {\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/tasks\"} className=\"nav-link\">\r\n                Tasks\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/add\"} className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <img src={logo} style={{width:'110px',height:'auto',float:'right',position:'absolute',right:'30px'}}/>\r\n          </div>\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n  \r\n          <Routes>\r\n            <Route  path={\"/\"} element={<TasksList/>} />\r\n            <Route  path={\"tasks\"} element={<TasksList/>} />\r\n            <Route  path=\"/add\" element={<AddTask/>} />\r\n            <Route path=\"/tasks/:id\" element={<Task/>} />\r\n          </Routes>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\serviceWorker.js",[],[],"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\components\\add-task.component.js",[],[],"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\components\\task.component.js",["46","47","48","49","50","51","52","53","54"],[],"import React,  { useEffect, useState } from \"react\";\r\nimport {getTask,updateTask,deleteTask} from \"../services/task.service\";\r\n\r\nexport const Task = (props) => {\r\n\r\n  useEffect(() => {\r\n\t\tgetTask(props.match.params.id)\r\n\t  }, []);\r\n\r\n    \r\n\tconst [currentTask, setCurrentTask] = useState({\r\n    id: null,\r\n    title: \"\",\r\n    description: \"\",\r\n    published: false\r\n  });\r\n\tconst [message, setMessage] = useState(\"\");\r\n \r\n\r\n  const onChangeTitle = (e)=> {\r\n    const title = e.target.value;\r\n\r\n    setCurrentTask({\r\n        ...currentTask,\r\n        title: title\r\n    })\r\n  }\r\n\r\n  const onChangeDescription = (e) => {\r\n    const description = e.target.value;\r\n    setCurrentTask({\r\n      ...currentTask,\r\n      description: description\r\n    })\r\n  }\r\n\r\n  const getTask = (id) => {\r\n    getTask(id)\r\n      .then(response => {\r\n        setCurrentTask(response.data);\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const updatePublished = (status) => {\r\n    var data = {\r\n      id: currentTask.id,\r\n      title: currentTask.title,\r\n      description: currentTask.description,\r\n      published: status\r\n    };\r\n\r\n    updateTask(this.state.currentTask.id, data)\r\n      .then(response => {\r\n        this.setCurrentTask({\r\n          ...currentTask,\r\n            published: status\r\n          }\r\n        );\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const updateTask = () => {\r\n    updateTask(\r\n      currentTask.id,\r\n      currentTask\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        setMessage(\r\n          \"The task was updated successfully!\"\r\n        );\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  const deleteTask = () => {    \r\n    deleteTask(this.state.currentTask.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        props.history.push('/tasks')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n\r\n    return (\r\n      <div>\r\n        {currentTask ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Task</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentTask.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentTask.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentTask.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentTask.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteTask}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateTask}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Task...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n","C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\components\\tasks-list.component.js",[],[],"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\services\\task.service.js",[],[],"C:\\Users\\Armand\\OneDrive\\Bureau\\Selenium_use\\Selenium_tp\\frontend\\src\\http-common.js",[],[],{"ruleId":"55","severity":1,"message":"56","line":2,"column":27,"nodeType":"57","messageId":"58","endLine":2,"endColumn":33},{"ruleId":"59","severity":1,"message":"60","line":26,"column":13,"nodeType":"61","endLine":26,"endColumn":115},{"ruleId":"55","severity":1,"message":"62","line":2,"column":9,"nodeType":"57","messageId":"58","endLine":2,"endColumn":16},{"ruleId":"55","severity":1,"message":"63","line":2,"column":17,"nodeType":"57","messageId":"58","endLine":2,"endColumn":27},{"ruleId":"55","severity":1,"message":"64","line":2,"column":28,"nodeType":"57","messageId":"58","endLine":2,"endColumn":38},{"ruleId":"65","severity":1,"message":"66","line":8,"column":7,"nodeType":"67","endLine":8,"endColumn":9,"suggestions":"68"},{"ruleId":"55","severity":1,"message":"69","line":17,"column":9,"nodeType":"57","messageId":"58","endLine":17,"endColumn":16},{"ruleId":"55","severity":1,"message":"70","line":20,"column":9,"nodeType":"57","messageId":"58","endLine":20,"endColumn":22},{"ruleId":"55","severity":1,"message":"71","line":29,"column":9,"nodeType":"57","messageId":"58","endLine":29,"endColumn":28},{"ruleId":"55","severity":1,"message":"72","line":48,"column":9,"nodeType":"57","messageId":"58","endLine":48,"endColumn":24},{"ruleId":"55","severity":1,"message":"73","line":86,"column":9,"nodeType":"57","messageId":"58","endLine":86,"endColumn":19},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getTask' is defined but never used.","'updateTask' is defined but never used.","'deleteTask' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getTask' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["74"],"'message' is assigned a value but never used.","'onChangeTitle' is assigned a value but never used.","'onChangeDescription' is assigned a value but never used.","'updatePublished' is assigned a value but never used.","'deleteTask' is assigned a value but never used.",{"desc":"75","fix":"76"},"Update the dependencies array to be: [getTask, props.match.params.id]",{"range":"77","text":"78"},[226,228],"[getTask, props.match.params.id]"]